<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>4. Kubernetes on Ops2Devops Workshop documentation</title><link>ops2devops.tanzu.dk/4.k8s/</link><description>Recent content in 4. Kubernetes on Ops2Devops Workshop documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 06 Apr 2022 20:33:12 +0200</lastBuildDate><atom:link href="ops2devops.tanzu.dk/4.k8s/index.xml" rel="self" type="application/rss+xml"/><item><title>01 Setup Kubeconfig</title><link>ops2devops.tanzu.dk/4.k8s/1/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/4.k8s/1/</guid><description>To access a kubernetes cluster, you first need to have a kubeconfig file. This files is located in your home directory, in the .kube directory.
On your current machine, there is no kubeconfig file, so in the next few steps, we will copy it, using SCP, from the kubernetes host.
Run scp ubuntu@10.0.1.9:/home/ubuntu/.kube/config /home/ubuntu/.kube/config Type yes to Accept certificate Type password VMware1! Look at the config file by running cat /home/ubuntu/.</description></item><item><title>02 Kubectl</title><link>ops2devops.tanzu.dk/4.k8s/2/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/4.k8s/2/</guid><description> Talk in class about Kubectl: CLI/API Yaml files vs commands</description></item><item><title>03 Test connection</title><link>ops2devops.tanzu.dk/4.k8s/3/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/4.k8s/3/</guid><description>Run kubectl get nodes to see you can connect and that the Kubernetes nodes are active The result should be something like this : NAME STATUS ROLES AGE VERSION k8s Ready &amp;lt;none&amp;gt; 6d1h v1.23.4-2+98fc2022f3ad3e This shows the different nodes of the Kubernetes Cluster, State, Role, Age and version. In this workshop, we are working with a single node Kubernetes cluster, but in the real world, there would probably be 3 masters, and a large number of workers.</description></item><item><title>04 Create Namespace</title><link>ops2devops.tanzu.dk/4.k8s/4/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/4.k8s/4/</guid><description> Run kubectl create ns studentx where x is replaced with your student number (See cli if in doubt) Run kubectl get ns and see that your namespace has been created Talk in class, about the concept of a Kubernetes namespace</description></item><item><title>05 Deployment.yml</title><link>ops2devops.tanzu.dk/4.k8s/5/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/4.k8s/5/</guid><description> Open deployment.yml file Go thru the file and talk in class about : apiVersion Kind Containers Limits</description></item><item><title>06 Github Packages</title><link>ops2devops.tanzu.dk/4.k8s/6/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/4.k8s/6/</guid><description>We are using Github&amp;rsquo;s version of docker Hub. To make sure, we don&amp;rsquo;t have to struggle with autentification in this lab, open your forked repository on github.com. Click Packages If the package has a private label next to it, follo the following steps. If not, you can skip ahead. Click on the package name 4-k8s-1 Select Package settings on the right Click Change visibility in the Danger Zone area in the bottom.</description></item><item><title>07 Deploy first K8S app</title><link>ops2devops.tanzu.dk/4.k8s/7/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/4.k8s/7/</guid><description>Change all places in deployment.yml from studentx to your student number. Open your repository in github.com and click on ops2devops/4-k8s-1 under Packagesin the bottom right. !!! If you can&amp;rsquo;t see any packages, then it&amp;rsquo;s probably because you forgot to commit and push your git changes, after each task. Get help from the teacher, or use this url for now ghcr.io/tanzudk/ops2devops/4-k8s-1:master copy the entire url after docker pull Replace the url after image, with your own in the deployment.</description></item><item><title>08 Enhance deployment.yaml</title><link>ops2devops.tanzu.dk/4.k8s/8/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/4.k8s/8/</guid><description> Add a line to deployment.yml under metadata(remember indentation) with namespace: studentx Run `kubectl apply -f deployment.yml`` See the deployment now happens in the namespace you just specified, by running kubectl get all -n studentx, without you typing it in each command. Delete the deployment again by running kubectl delete -f deployment.yml</description></item><item><title>09 Verify deployments / Pods</title><link>ops2devops.tanzu.dk/4.k8s/9/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/4.k8s/9/</guid><description> If you want to see all deployments across namespaces, then run kubectl get deployments -A You can do the same with pods kubectl get pods -A Or just type kubectl get all -A if you want to see (almost) all types of things running.</description></item><item><title>10 Add service</title><link>ops2devops.tanzu.dk/4.k8s/10/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/4.k8s/10/</guid><description>Copy the deployment.yml file you created in last task by running cp ../1.Task/deployment.yml deployment.yml from the 2.Task directory
Edit the service.yml file, so the Selector: app namematches the name in the deployment.
Correct studentx to the correct student number.
Change the nodeport, to match your student number, in the last 2 digits.
student0 = 30010 student1 = 30011 student2 = 30012 student3 = 30013 student4 = 30014 student5 = 30015 student6 = 30016 student7 = 30017 student8 = 30018 student9 = 30019 student10 = 30020 etc In this demo enviroment, we are using Nodeport, to expose the deployments.</description></item><item><title>11 Deploy with Service</title><link>ops2devops.tanzu.dk/4.k8s/11/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/4.k8s/11/</guid><description>Run kubectl apply -f . to deploy all .yml files in the directory You should see each file being created deployment.apps/student1-deployment created service/nginx-service created Run kubectl get all -n studentx to see your deployment and services has been deployed. NAME READY STATUS RESTARTS AGE pod/student1-deployment-9888cf49d-w855n 1/1 Running 0 77s NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE service/nginx-service NodePort 10.152.183.251 &amp;lt;none&amp;gt; 80:30010/TCP 77s NAME READY UP-TO-DATE AVAILABLE AGE deployment.</description></item><item><title>12 Cleanup</title><link>ops2devops.tanzu.dk/4.k8s/12/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/4.k8s/12/</guid><description> Cleanup by running kubectl delete -f .</description></item></channel></rss>