<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>5. CI/CD on Ops2Devops Workshop documentation</title><link>ops2devops.tanzu.dk/5.cicd/</link><description>Recent content in 5. CI/CD on Ops2Devops Workshop documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 06 Apr 2022 20:33:12 +0200</lastBuildDate><atom:link href="ops2devops.tanzu.dk/5.cicd/index.xml" rel="self" type="application/rss+xml"/><item><title>01 Actions file</title><link>ops2devops.tanzu.dk/5.cicd/1/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/5.cicd/1/</guid><description>We will now setup automatic building of docker images, and pushing it to your private repo, using GitHub Actions.
Open docker-publish.yml Talk about the the file in class. On Env Variables Jobs Packages</description></item><item><title>02 Copy actions file</title><link>ops2devops.tanzu.dk/5.cicd/2/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/5.cicd/2/</guid><description>To activate a actions file, you need to place it in the .github/workflows and push it to github. We will do this now.
Copy the file, to the root of your github repo, under .github/workflows by running this cp docker-publish.yml ../../.github/workflows and commit and push your repo after.</description></item><item><title>03 See running action</title><link>ops2devops.tanzu.dk/5.cicd/3/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/5.cicd/3/</guid><description>Open github.com and find your repository, and select Actions Under Workflows your should now see 2 workflows. 4-k8s-1 and 5-k8s-1. The naming represents module and task, of this class. We will only focus on 5-k8s-1 from now on. Click on the top Workflow Run. The name is the same as your last commit message. You should now see your stages. You only have one called Build so click on that.</description></item><item><title>04 Discuss Action concepts</title><link>ops2devops.tanzu.dk/5.cicd/4/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/5.cicd/4/</guid><description> Talk in class about : Versions Triggers Build phases Variables Secrets Artifacts Types of jobs Hosted runners</description></item><item><title>05 Trigger build</title><link>ops2devops.tanzu.dk/5.cicd/5/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/5.cicd/5/</guid><description> Change the index.html file under html with new content. And commit and push changes to GitHub. Watch the action trigger again, and see a new build being created.</description></item><item><title>06 Prepare Kubeconfig file for CI/CD</title><link>ops2devops.tanzu.dk/5.cicd/6/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/5.cicd/6/</guid><description>Since the certificate, don&amp;rsquo;t match the external ip of your Kubernetes cluster, it wont work. To fix this, we will remove the certificate section, and add a Insecure tag into it.
Run sed &amp;quot;s/certificate-authority-data:.*/insecure-skip-tls-verify: true/g&amp;quot; /home/ubuntu/.kube/config &amp;gt; kubeconfig.yml to allow connectivity external, without verifying the certificate. Open kubeconfig.yml and change the local ip under server to the public ip of the K8S server (Same port and protocol)</description></item><item><title>07 Github Secrets</title><link>ops2devops.tanzu.dk/5.cicd/7/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/5.cicd/7/</guid><description> Open github.com -&amp;gt; your repository -&amp;gt; Settings -&amp;gt; Secrets -&amp;gt; Actions Add new Repository secret with the name KUBE_CONFIG and paste the content from the kubeconfig.yml in the value field. The Variable KUBE_CONFIG can now be used, when your action run, in a more secure way.</description></item><item><title>08 Change deployment.yml</title><link>ops2devops.tanzu.dk/5.cicd/8/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/5.cicd/8/</guid><description> Open deployment.yml in VScode and change all variables to your student number. Remember to also change the port. Also change the iamge, to your new package you created in the last Task.</description></item><item><title>09 K8S Deployment Action</title><link>ops2devops.tanzu.dk/5.cicd/9/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/5.cicd/9/</guid><description> Open k8s-deploy.yml Talk in class about : Action modules Secrets / Variables Run</description></item><item><title>10 Activate Deployment Action</title><link>ops2devops.tanzu.dk/5.cicd/10/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/5.cicd/10/</guid><description>Copy k8s-deploy.yml to then workflows folder by running cp k8s-deploy.yml ../../.github/workflows and commit and push your repo after. Open github.com -&amp;gt; Actions and see your action run successfull. Run kubectl get all -n studentx to see your deployment and service beging deployed. Note the age of the deployments. NAME READY STATUS RESTARTS AGE pod/studentx-deployment-648bffc4c7-lf4dg 1/1 Running 0 24s NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE service/nginx-service NodePort 10.152.183.128 &amp;lt;none&amp;gt; 80:30010/TCP 23s NAME READY UP-TO-DATE AVAILABLE AGE deployment.</description></item></channel></rss>