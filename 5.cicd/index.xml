<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>5. CI/CD on Ops2Devops Workshop documentation</title><link>https://ops2devops.tanzu.dk/5.cicd/</link><description>Recent content in 5. CI/CD on Ops2Devops Workshop documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 06 Apr 2022 20:33:12 +0200</lastBuildDate><atom:link href="https://ops2devops.tanzu.dk/5.cicd/index.xml" rel="self" type="application/rss+xml"/><item><title>01 Actions file</title><link>https://ops2devops.tanzu.dk/5.cicd/1/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>https://ops2devops.tanzu.dk/5.cicd/1/</guid><description>We will now setup automatic building of docker images, and pushing it to your private repo, using GitHub Actions.
Open ops2devops.yml Talk about the the file in class. On Env Variables Jobs Packages To make all the enviroment variables in the file work, we need to add them to Github first.
Open your repo in github, and select the Settings tab. Select Secrets from the menu, and select Actions In to top right, select New repository secret and create the following 2 secrets.</description></item><item><title>02 Copy actions file</title><link>https://ops2devops.tanzu.dk/5.cicd/2/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>https://ops2devops.tanzu.dk/5.cicd/2/</guid><description>To activate a actions file, you need to place it in the .github/workflows and push it to github. We will do this now.
First open the file ops2devops.yml, and change the IMAGE_NAME variable in the beginning, to your student number, instead of studentx
Save and copy the file, to the root of your github repo, under .github/workflows by running this
mkdir -p ../.github/workflows cp ops2devops.</description></item><item><title>03 See running action</title><link>https://ops2devops.tanzu.dk/5.cicd/3/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>https://ops2devops.tanzu.dk/5.cicd/3/</guid><description> Open github.com and find your repository, and select Actions Under Workflows your should now see your workflows. ops2devops. Click on the top Workflow Run. The name is the same as your last commit message. You should now see your stages. You only have one called Build so click on that. You can now see all the stages, that we setup in the file.</description></item><item><title>04 Discuss Action concepts</title><link>https://ops2devops.tanzu.dk/5.cicd/4/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>https://ops2devops.tanzu.dk/5.cicd/4/</guid><description> Talk in class about : Versions Triggers Build phases Variables Secrets Artifacts Types of jobs Hosted runners</description></item><item><title>05 Trigger build</title><link>https://ops2devops.tanzu.dk/5.cicd/5/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>https://ops2devops.tanzu.dk/5.cicd/5/</guid><description> Edit the index.html file under html with your correnct student number. And commit and push changes to GitHub.
Open the Actions tab in Github, and see a new action being triggered, and see a new build being created and pushed to the registry.</description></item><item><title>06 Prepare Kubeconfig file for CI/CD</title><link>https://ops2devops.tanzu.dk/5.cicd/6/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>https://ops2devops.tanzu.dk/5.cicd/6/</guid><description>Since the certificate, don&amp;rsquo;t match the external ip of your Kubernetes cluster, it wont work. To fix this, we will remove the certificate section, and add a Insecure tag into it.
To allow connectivity external, without verifying the certificate run sed &amp;#34;s/certificate-authority-data:.*/insecure-skip-tls-verify: true/g&amp;#34; /home/ubuntu/.kube/config &amp;gt; kubeconfig.yml This created a new file in your 5.CICD directory named kubeconfig.yml
We also need to change the Kubernetes ip from the local to the external, since GitHub actions are running external in our enviroment.</description></item><item><title>07 Github Secrets</title><link>https://ops2devops.tanzu.dk/5.cicd/7/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>https://ops2devops.tanzu.dk/5.cicd/7/</guid><description>To allow the action to use the Kubeconfig file, we will be saving it in a GitHub secret, that can only be used by the action. Just like we did earlier, with the registry.
Open your repo in github, and select the Settings tab. Select Secrets from the menu, and select Actions In to top right, select New repository secret and create the following 2 secrets. KUBE_CONFIG with the content from the kubeconfig.</description></item><item><title>08 Change deployment.yml</title><link>https://ops2devops.tanzu.dk/5.cicd/8/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>https://ops2devops.tanzu.dk/5.cicd/8/</guid><description> Open deployment.yml in VScode and change the following : all studentx to your student number. The port to the same as you used in the previus step. Image to registry.tanzu.dk/ops2devops/studentx:master (change x to student number)</description></item><item><title>09 K8S Deployment Action</title><link>https://ops2devops.tanzu.dk/5.cicd/9/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>https://ops2devops.tanzu.dk/5.cicd/9/</guid><description> Open k8s-deploy.yml Talk in class about : Action modules Secrets / Variables Run Versions (Sha)</description></item><item><title>10 Activate Deployment Action</title><link>https://ops2devops.tanzu.dk/5.cicd/10/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>https://ops2devops.tanzu.dk/5.cicd/10/</guid><description>Copy k8s-deploy.yml to the workflows folder and commit and push when that is done, by running the command cp k8s-deploy.yml ../.github/workflows Open github.com -&amp;gt; Actions and see your action run successfull. To see your deployment and service beging deployed run kubectl get all -n studentx Note the age of the deployments. NAME READY STATUS RESTARTS AGE pod/studentx-deployment-648bffc4c7-lf4dg 1/1 Running 0 24s NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE service/nginx-service NodePort 10.</description></item></channel></rss>