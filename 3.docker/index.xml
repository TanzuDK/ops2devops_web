<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>3. Docker on Ops2Devops Workshop documentation</title><link>ops2devops.tanzu.dk/3.docker/</link><description>Recent content in 3. Docker on Ops2Devops Workshop documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 06 Apr 2022 20:33:12 +0200</lastBuildDate><atom:link href="ops2devops.tanzu.dk/3.docker/index.xml" rel="self" type="application/rss+xml"/><item><title>01 Docker Hub</title><link>ops2devops.tanzu.dk/3.docker/1/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/3.docker/1/</guid><description> Open https://hub.docker.com Search for Nginx Click on the Official Image (should be the one on top) Go thru the documentation in class : Official Image Reference Tags Image variants OS/Arch Use of the image (Examples)</description></item><item><title>02 Dockerfile</title><link>ops2devops.tanzu.dk/3.docker/2/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/3.docker/2/</guid><description> Open the file Dockerfile in VSCode Go thru the different options FROM WORKDIR RUN COPY EXPOSE CMD</description></item><item><title>03 Build Container</title><link>ops2devops.tanzu.dk/3.docker/3/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/3.docker/3/</guid><description>Open a terminal in 3.Docker/1.Task directory (Hint: Right click the folder, and selcect Open in integrated terminal)
Run the command docker build -t web:v1 . (Note the . in the end)
This triggers a build of a container, with the name web1 and with a version tab of v1
Watch the build as it runs, thru every line of the Dockerfile
When it&amp;rsquo;s done, you should read Successfully tagged web:v1</description></item><item><title>04 Run Container</title><link>ops2devops.tanzu.dk/3.docker/4/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/3.docker/4/</guid><description>To create and run a container, based on the image you build, in the last step
Run docker run -p 80:80 web:v1 open a browser to the public ip of your student VM, from your local machine http://studentip:80 See the website that is running :-) Note that when you connect to the website, the logs from the container, is updated in the console. Stop the container pressing ctrl + c</description></item><item><title>05 Make Changes</title><link>ops2devops.tanzu.dk/3.docker/5/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/3.docker/5/</guid><description>To build a new version, of the container follow the steps
Edit html/index.html by replacing the Student xxx with your name. Build a new version of the container, by running docker build -t web:v2 . Run the new version docker run -p 80:80 web:v2 open a browser to http://studentip:80 and see that the content has changed. Stop the container again by pressing ctrl + c</description></item><item><title>06 See different images</title><link>ops2devops.tanzu.dk/3.docker/6/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/3.docker/6/</guid><description>See the local non running containers.
run docker ps -a and see that you have 2 versions of the web container. Note the names is auto generated, to make sure there is no conflick between them. Also note, that this is the actual containers, that are build on the images. You can have multiple containers, build on the same image.</description></item><item><title>07 Docker-Compose</title><link>ops2devops.tanzu.dk/3.docker/7/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/3.docker/7/</guid><description>Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a YAML file to configure your applicationâ€™s services. Then, with a single command, you create and start all the services from your configuration.
Open docker-compose.yml and examine the content of the file.
Note :
Internal name Container name Build Ports Volumes (data is external from the container) run docker-compose up to build and run the container.</description></item><item><title>08 Run as deamon</title><link>ops2devops.tanzu.dk/3.docker/8/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/3.docker/8/</guid><description>To run as a service, follow the steps
run docker-compose up -d to run the container as a service run docker ps and see the container running. Note the name if the container, is nginx, and not random generated one. open a browser to http://studentip:80 and see it&amp;rsquo;s still runnning as before. Open index.html and change Student xxx to your student number. Save the file and refresh the website, and see your changes.</description></item><item><title>09 Trubleshoot running container</title><link>ops2devops.tanzu.dk/3.docker/9/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/3.docker/9/</guid><description>When trubleshooting a running container, a cli inside the container, is often a usefull tool. We will try this in the following steps
Run docker exec -it nginx /bin/bash to get a terminal into the running container See the promt changes to root@id Run /usr/share/nginx/html to list the html directory, from inside the container. Run exit to exit out of the container. Run docker ps to see the conainer is still running.</description></item><item><title>10 Cleanup</title><link>ops2devops.tanzu.dk/3.docker/10/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/3.docker/10/</guid><description>To stop and Cleanup the running container
run docker-compose down to stop the container.</description></item><item><title>11 Advanced Docker-Compose</title><link>ops2devops.tanzu.dk/3.docker/11/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/3.docker/11/</guid><description>In this task, we are going to look at a more advanced Multi container Wordpress app.
Open docker-compose.yml
Run thru the file, and talk about the following :
Multiple containers Env variables Links between containers Volumes Depends on restart policy Run docker-compose up to start the container.
Look at the images get pulled, and the install process runs.
Open http://studentip:80 and run thru the setup guide.</description></item><item><title>12 Data / Volumes</title><link>ops2devops.tanzu.dk/3.docker/12/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/3.docker/12/</guid><description>To see the new volusmes, that was created in the last step
Run docker volume ls and see you now have 2 volumes. DRIVER VOLUME NAME local 3task_db_data local 3task_wordpress_data Talk in class about : Volumes Driver / Location Sharing data between containers</description></item><item><title>13 Examine content of a volume</title><link>ops2devops.tanzu.dk/3.docker/13/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>ops2devops.tanzu.dk/3.docker/13/</guid><description>To examine the content of a volume, go thru the steps
Run docker volume ls to see the volumes Run docker volume inspect VolumeName on the volume you want to see details on. Copy the path under Mountpoint Run sudo ls MountPointPath to see the files in the volume. Note it&amp;rsquo;s only possible to see the files, using sudo, due to permissions.</description></item></channel></rss>