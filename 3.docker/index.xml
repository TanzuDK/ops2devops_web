<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>3. Docker on Ops2Devops Workshop documentation</title><link>https://ops2devops.tanzu.dk/3.docker/</link><description>Recent content in 3. Docker on Ops2Devops Workshop documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 06 Apr 2022 20:33:12 +0200</lastBuildDate><atom:link href="https://ops2devops.tanzu.dk/3.docker/index.xml" rel="self" type="application/rss+xml"/><item><title>01 Docker Hub</title><link>https://ops2devops.tanzu.dk/3.docker/1/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>https://ops2devops.tanzu.dk/3.docker/1/</guid><description> Open https://hub.docker.com Search for Nginx Click on the Official Image (should be the one on top) Go thru the documentation in class : Official Image Reference Tags Image variants OS/Arch Use of the image (Examples)</description></item><item><title>02 Dockerfile</title><link>https://ops2devops.tanzu.dk/3.docker/2/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>https://ops2devops.tanzu.dk/3.docker/2/</guid><description>From folder 3.Docker
Open the file Dockerfile in VSCode Go thru and talk about the different options FROM WORKDIR RUN COPY EXPOSE CMD</description></item><item><title>03 Build Container</title><link>https://ops2devops.tanzu.dk/3.docker/3/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>https://ops2devops.tanzu.dk/3.docker/3/</guid><description>From folder 3.Docker
Open a terminal in 3.Docker directory (Hint: Right click the folder, and select Open in integrated terminal) To build dthe container run (Note the . in the end) docker build -t web:v1 . This triggers a build of a image, with the name web1 and with a version tab of v1
Watch the build as it runs, thru every line of the Dockerfile
When it&amp;rsquo;s done, you should read Successfully tagged web:v1</description></item><item><title>04 Run Container</title><link>https://ops2devops.tanzu.dk/3.docker/4/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>https://ops2devops.tanzu.dk/3.docker/4/</guid><description>To create and run a container, based on the image you build, in the last step run
docker run -p 80:80 web:v1 open a new browsertab to the public ip of your student VM http://studentip:80 (Hint: Same ip as where your VScode is running) See the website that is running :-) (Hint: Keep the tab open, we will use it again) Note that when you connect to the website, the logs from the container, is updated in the console.</description></item><item><title>05 Make Changes</title><link>https://ops2devops.tanzu.dk/3.docker/5/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>https://ops2devops.tanzu.dk/3.docker/5/</guid><description>To build a new version, of the container follow the steps
Edit html/index.html by replacing the Student xxx with your name. Build a new version of the container, by running docker build -t web:v2 . Run the new version docker run -p 80:80 web:v2 Refresh the browser tab, from last task, and see that the content has changed. Stop the container again by pressing ctrl + c</description></item><item><title>06 See different images</title><link>https://ops2devops.tanzu.dk/3.docker/6/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>https://ops2devops.tanzu.dk/3.docker/6/</guid><description>See the local non running containers.
To see that you have 2 versions of the web container run docker ps -a Note the names is auto generated, to make sure there is no conflict between them. Also note, that this is the actual containers, that are build on the images. You can have multiple containers, build on the same image.</description></item><item><title>07 Docker-Compose</title><link>https://ops2devops.tanzu.dk/3.docker/7/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>https://ops2devops.tanzu.dk/3.docker/7/</guid><description>Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a YAML file to configure your application’s services. Then, with a single command, you create and start all the services from your configuration.
Open docker-compose.yml and examine the content of the file.
Note :
Internal name Container name Build Ports Volumes (data is external from the container) To build and run the container run
docker-compose up Note we build the container in this example, but we could just as well, pull one from a registry.</description></item><item><title>08 Run as deamon</title><link>https://ops2devops.tanzu.dk/3.docker/8/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>https://ops2devops.tanzu.dk/3.docker/8/</guid><description>To run as a service, follow the steps
To run the container as a service run docker-compose up -d To see the container running run docker ps ubuntu@student-0:~/ops2devops/3.Docker$ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES c5917fd155cc 3docker_webserver &amp;#34;/docker-entrypoint.…&amp;#34; 2 minutes ago Up 3 seconds 0.0.0.0:80-&amp;gt;80/tcp, :::80-&amp;gt;80/tcp nginx Note the name if the container, is nginx, and not random generated one. open a browser to http://studentip:80 and see it&amp;rsquo;s still runnning as before.</description></item><item><title>09 Trubleshoot running container</title><link>https://ops2devops.tanzu.dk/3.docker/9/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>https://ops2devops.tanzu.dk/3.docker/9/</guid><description>Shell When trubleshooting a running container, a cli inside the container, is often a usefull tool. We will try this in the following steps
To get a terminal into the running container run docker exec -it nginx /bin/bash See the promt changes to root@id To list the html directory, from inside the container run ls /usr/share/nginx/html To exit out of the container run exit To see the container is still running run docker ps Logs Getting logs from a running container, is also a usefull way of trubleshooting, without loogin into it.</description></item><item><title>10 Cleanup</title><link>https://ops2devops.tanzu.dk/3.docker/10/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>https://ops2devops.tanzu.dk/3.docker/10/</guid><description>To stop and Cleanup the running container
To stop the container run docker-compose down</description></item><item><title>11 Advanced Docker-Compose</title><link>https://ops2devops.tanzu.dk/3.docker/11/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>https://ops2devops.tanzu.dk/3.docker/11/</guid><description>In this task, we are going to look at a more advanced Multi container Wordpress app. Note we have multiple docker-comose files, and therefore we need to point to the .wp docker-compose file.
Open docker-compose.wp.yml
Go thru the file in class, and talk about the following :
Multiple containers Env variables Links between containers Volumes Depends on restart policy To start the container run
docker-compose -f docker-compose.wp.yml up Look at the images get pulled, and the install process runs.</description></item><item><title>12 Data / Volumes</title><link>https://ops2devops.tanzu.dk/3.docker/12/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>https://ops2devops.tanzu.dk/3.docker/12/</guid><description>To see the new volumes, that was created in the last step run
docker volume ls DRIVER VOLUME NAME local 3task_db_data local 3task_wordpress_data Talk in class about : Volumes Driver / Location Sharing data between containers</description></item><item><title>13 Examine content of a volume</title><link>https://ops2devops.tanzu.dk/3.docker/13/</link><pubDate>Wed, 06 Apr 2022 20:33:12 +0200</pubDate><guid>https://ops2devops.tanzu.dk/3.docker/13/</guid><description>To examine the content of a volume, go thru the steps
To see the volumes run docker volume ls ubuntu@student-0:~/ops2devops/3.Docker$ docker volume ls DRIVER VOLUME NAME local 3docker_db_data local 3docker_wordpress_data On the volume you want to see details on run docker volume inspect VolumeName ubuntu@student-0:~/ops2devops/3.Docker$ docker volume inspect 3docker_db_data [ { &amp;#34;CreatedAt&amp;#34;: &amp;#34;2022-04-19T07:44:15Z&amp;#34;, &amp;#34;Driver&amp;#34;: &amp;#34;local&amp;#34;, &amp;#34;Labels&amp;#34;: { &amp;#34;com.docker.compose.project&amp;#34;: &amp;#34;3docker&amp;#34;, &amp;#34;com.docker.compose.version&amp;#34;: &amp;#34;1.25.0&amp;#34;, &amp;#34;com.docker.compose.volume&amp;#34;: &amp;#34;db_data&amp;#34; }, &amp;#34;Mountpoint&amp;#34;: &amp;#34;/var/lib/docker/volumes/3docker_db_data/_data&amp;#34;, &amp;#34;Name&amp;#34;: &amp;#34;3docker_db_data&amp;#34;, &amp;#34;Options&amp;#34;: null, &amp;#34;Scope&amp;#34;: &amp;#34;local&amp;#34; } ] Copy the path under Mountpoint To see the files in the volume run sudo ls MountPointPath ubuntu@student-0:~/ops2devops/3.</description></item></channel></rss>